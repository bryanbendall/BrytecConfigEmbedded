add_library(BrytecConfigEmbedded 
                Boards/BrytecBoard.h
                Can/EBrytecCan.h
                Can/EBrytecCan.cpp
                Can/ECanBus.h
                Can/ECanBus.cpp
                Can/EPinStatusQueue.cpp
                Can/EPinStatusQueue.h
                Can/ECanCommandQueue.cpp
                Can/ECanCommandQueue.h
                Can/ECanHolleyBroadcastQueue.cpp
                Can/ECanHolleyBroadcastQueue.h
                Can/ECustomCanQueue.cpp
                Can/ECustomCanQueue.h
                Deserializer/BinaryArrayDeserializer.cpp
                Deserializer/BinaryArrayDeserializer.h
                Deserializer/BinaryDeserializer.h
                Deserializer/BinaryBufferSerializer.cpp
                Deserializer/BinaryBufferSerializer.h
                Deserializer/BinaryPathDeserializer.cpp
                Deserializer/BinaryPathDeserializer.h
                Nodes/EAndNode.cpp
                Nodes/EAndNode.h
                Nodes/ECanBusInputNode.cpp
                Nodes/ECanBusInputNode.h
                Nodes/ECanBusOutputNode.cpp
                Nodes/ECanBusOutputNode.h
                Nodes/EClampNode.cpp
                Nodes/EClampNode.h
                Nodes/EColorNode.cpp
                Nodes/EColorNode.h
                Nodes/ECompareNode.cpp
                Nodes/ECompareNode.h                
                Nodes/EConvertNode.cpp
                Nodes/EConvertNode.h
                Nodes/ECounterNode.cpp
                Nodes/ECounterNode.h
                Nodes/ECurveNode.cpp
                Nodes/ECurveNode.h
                Nodes/EInterpolateNode.cpp
                Nodes/EInterpolateNode.h
                Nodes/EDelayNode.cpp
                Nodes/EDelayNode.h
                Nodes/EFinalValueNode.cpp
                Nodes/EFinalValueNode.h
                Nodes/EHolleyBroadcastNode.cpp
                Nodes/EHolleyBroadcastNode.h
                Nodes/EHolleyIoModuleNode.cpp
                Nodes/EHolleyIoModuleNode.h
                Nodes/EInitialValueNode.cpp
                Nodes/EInitialValueNode.h
                Nodes/EInvertNode.cpp
                Nodes/EInvertNode.h
                Nodes/EMapValueNode.cpp
                Nodes/EMapValueNode.h
                Nodes/EMathNode.cpp
                Nodes/EMathNode.h
                Nodes/EMixColorNode.cpp
                Nodes/EMixColorNode.h
                Nodes/ENodeGroupNode.cpp
                Nodes/ENodeGroupNode.h
                Nodes/EOnOffNode.cpp
                Nodes/EOnOffNode.h
                Nodes/EOrNode.cpp
                Nodes/EOrNode.h
                Nodes/EPIDNode.cpp
                Nodes/EPIDNode.h
                Nodes/EPinCurrentNode.cpp
                Nodes/EPinCurrentNode.h
                Nodes/EPushButtonNode.cpp
                Nodes/EPushButtonNode.h
                Nodes/ERacepakSwitchPanelNode.cpp
                Nodes/ERacepakSwitchPanelNode.h
                Nodes/ESwitchNode.cpp
                Nodes/ESwitchNode.h
                Nodes/EThermistorNode.cpp
                Nodes/EThermistorNode.h
                Nodes/EToggleNode.cpp
                Nodes/EToggleNode.h
                Nodes/ETwoStageNode.cpp
                Nodes/ETwoStageNode.h
                Nodes/EValueNode.cpp
                Nodes/EValueNode.h
                Usb/UsbDefs.cpp
                Usb/UsbDefs.h                
                Usb/ModuleCommand.cpp
                Usb/ModuleCommand.h
                Utils/ENodeConnection.h
                Utils/ENodeDeserializer.cpp
                Utils/ENodeDeserializer.h
                Utils/ENodeGroup.cpp
                Utils/ENodeGroup.h
                Utils/ENodesVector.h
                EBrytecApp.cpp
                EBrytecApp.h
                EBrytecConfig.h
                ENode.cpp
                ENode.h
                IOTypes.cpp
                IOTypes.h
)

target_include_directories(BrytecConfigEmbedded PUBLIC 
                            ${CMAKE_CURRENT_SOURCE_DIR}
                            ${BrytecCustomConfigDir}
                            )